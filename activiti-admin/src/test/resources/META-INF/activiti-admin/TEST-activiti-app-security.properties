# want to be able to read non-encrypted properties
test.notencrypted.property=iamnotencrypted
# also want to be able to refer to an encrypted property from any other property
test.referto.encrypted.property=${test.encrypted.property}

# check that an encrypted property can be read
test.encrypted.property=ENC(KgMGl9LGjg+XNqEQIWRHtzgq0Gb2P3XzGn1j9oiEHaw=)
jasypt.encryptor.algorithm=PBEWITHSHA1ANDDESEDE

# an alternative choice that also works without having to install oracle unlimited policy files for JCE or use bouncy castle
#test.encrypted.property=ENC(QQ6SPvW94XVF7uYDOHhiUSOAjezonDt3IahvNSn5HXA=)
#jasypt.encryptor.algorithm=PBEWithMD5AndDES

#note that encryption options on java8 are limited to 128-bit in jasypt v1.9.2 - https://sourceforge.net/p/jasypt/bugs/32/
#unless bouncy castle is installed and then the below works
#jasypt.encryptor.providerName=BC
#test.encrypted.property=ENC(CWAI7+NL1MiHT5XfG/5GD3eQxq77MKsFt9qstCjR+tYv1R3hOSoPcmGI8Z9Pfoya)
#jasypt.encryptor.algorithm=PBEWITHSHAAND256BITAES-CBC-BC
